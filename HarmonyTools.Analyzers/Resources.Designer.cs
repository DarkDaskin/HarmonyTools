//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HarmonyTools.Analyzers {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("HarmonyTools.Analyzers.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target method &apos;{0}&apos; parameter &apos;{1}&apos; does not have a corresponding patch method &apos;{2}&apos; parameter..
        /// </summary>
        internal static string AllTargetMethodParametersMustBeIncludedMessageFormat {
            get {
                return ResourceManager.GetString("AllTargetMethodParametersMustBeIncludedMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target method parameter does not have a corresponding patch method parameter.
        /// </summary>
        internal static string AllTargetMethodParametersMustBeIncludedTitle {
            get {
                return ResourceManager.GetString("AllTargetMethodParametersMustBeIncludedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument new name &apos;{0}&apos; does not correspond to a patch method parameter..
        /// </summary>
        internal static string ArgumentNewNamesMustCorrespondToParameterNamesMessageFormat {
            get {
                return ResourceManager.GetString("ArgumentNewNamesMustCorrespondToParameterNamesMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument new name does not correspond to a patch method parameter.
        /// </summary>
        internal static string ArgumentNewNamesMustCorrespondToParameterNamesTitle {
            get {
                return ResourceManager.GetString("ArgumentNewNamesMustCorrespondToParameterNamesTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing new name for an argument..
        /// </summary>
        internal static string ArgumentsOnTypesAndMethodsMustHaveNewNameMessageFormat {
            get {
                return ResourceManager.GetString("ArgumentsOnTypesAndMethodsMustHaveNewNameMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing new name for an argument.
        /// </summary>
        internal static string ArgumentsOnTypesAndMethodsMustHaveNewNameTitle {
            get {
                return ResourceManager.GetString("ArgumentsOnTypesAndMethodsMustHaveNewNameTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument types and argument variations have differing number of items..
        /// </summary>
        internal static string ArgumentTypesAndVariationsMustMatchMessageFormat {
            get {
                return ResourceManager.GetString("ArgumentTypesAndVariationsMustMatchMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument types and argument variations mismatch.
        /// </summary>
        internal static string ArgumentTypesAndVariationsMustMatchTitle {
            get {
                return ResourceManager.GetString("ArgumentTypesAndVariationsMustMatchTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid attribute argument..
        /// </summary>
        internal static string AttributeArgumentsMustBeValidMessageFormat {
            get {
                return ResourceManager.GetString("AttributeArgumentsMustBeValidMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid attribute argument.
        /// </summary>
        internal static string AttributeArgumentsMustBeValidTitle {
            get {
                return ResourceManager.GetString("AttributeArgumentsMustBeValidTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delegate is called with incorrent instance. It can only be called from patch methods, target method of which is an instance method of &apos;{0}&apos; type..
        /// </summary>
        internal static string DelegateMustBeCalledWithCorrectInstanceMessageFormat {
            get {
                return ResourceManager.GetString("DelegateMustBeCalledWithCorrectInstanceMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delegate is called with incorrent instance.
        /// </summary>
        internal static string DelegateMustBeCalledWithCorrectInstanceTitle {
            get {
                return ResourceManager.GetString("DelegateMustBeCalledWithCorrectInstanceTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple auxiliary patch methods of the same kind are defined. Only the first one will be executed..
        /// </summary>
        internal static string DontDefineMultipleAuxiliaryPatchMethodsMessageFormat {
            get {
                return ResourceManager.GetString("DontDefineMultipleAuxiliaryPatchMethodsMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple auxiliary patch methods of the same kind are defined.
        /// </summary>
        internal static string DontDefineMultipleAuxiliaryPatchMethodsTitle {
            get {
                return ResourceManager.GetString("DontDefineMultipleAuxiliaryPatchMethodsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HarmonyArgument is used on special patch method &apos;{0}&apos; parameter &apos;{1}&apos;. It will have no effect..
        /// </summary>
        internal static string DontUseArgumentsWithSpecialParametersMessageFormat {
            get {
                return ResourceManager.GetString("DontUseArgumentsWithSpecialParametersMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HarmonyArgument is used on special patch method parameter.
        /// </summary>
        internal static string DontUseArgumentsWithSpecialParametersTitle {
            get {
                return ResourceManager.GetString("DontUseArgumentsWithSpecialParametersTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reverse patch cannot be used with bulk patching..
        /// </summary>
        internal static string DontUseBulkPatchingMethodsWithReversePatchesMessageFormat {
            get {
                return ResourceManager.GetString("DontUseBulkPatchingMethodsWithReversePatchesMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reverse patch cannot be used with bulk patching.
        /// </summary>
        internal static string DontUseBulkPatchingMethodsWithReversePatchesTitle {
            get {
                return ResourceManager.GetString("DontUseBulkPatchingMethodsWithReversePatchesTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bulk patching can&apos;t be combined with individual target method annotations..
        /// </summary>
        internal static string DontUseIndividualAnnotationsWithBulkPatchingMessageFormat {
            get {
                return ResourceManager.GetString("DontUseIndividualAnnotationsWithBulkPatchingMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bulk patching can&apos;t be combined with individual target method annotations.
        /// </summary>
        internal static string DontUseIndividualAnnotationsWithBulkPatchingTitle {
            get {
                return ResourceManager.GetString("DontUseIndividualAnnotationsWithBulkPatchingTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;__instance&apos; parameter is used with static target method &apos;{0}&apos;. The parameter will be always null..
        /// </summary>
        internal static string DontUseInstanceParameterWithStaticMethodsMessageFormat {
            get {
                return ResourceManager.GetString("DontUseInstanceParameterWithStaticMethodsMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;__instance&apos; parameter is used with static target method.
        /// </summary>
        internal static string DontUseInstanceParameterWithStaticMethodsTitle {
            get {
                return ResourceManager.GetString("DontUseInstanceParameterWithStaticMethodsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only single method of bulk patching is allowed..
        /// </summary>
        internal static string DontUseMultipleBulkPatchingMethodsMessageFormat {
            get {
                return ResourceManager.GetString("DontUseMultipleBulkPatchingMethodsMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only single method of bulk patching is allowed.
        /// </summary>
        internal static string DontUseMultipleBulkPatchingMethodsTitle {
            get {
                return ResourceManager.GetString("DontUseMultipleBulkPatchingMethodsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;__resultRef&apos; parameter is used with target method &apos;{0}&apos; which does not return by reference..
        /// </summary>
        internal static string DontUseResultRefWithMethodsNotReturningByRefMessageFormat {
            get {
                return ResourceManager.GetString("DontUseResultRefWithMethodsNotReturningByRefMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;__resultRef&apos; parameter is used with target method which does not return by reference.
        /// </summary>
        internal static string DontUseResultRefWithMethodsNotReturningByRefTitle {
            get {
                return ResourceManager.GetString("DontUseResultRefWithMethodsNotReturningByRefTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;__result&apos; parameter is used with target method &apos;{0}&apos; which returns by reference..
        /// </summary>
        internal static string DontUseResultWithMethodsReturningByRefMessageFormat {
            get {
                return ResourceManager.GetString("DontUseResultWithMethodsReturningByRefMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;__result&apos; parameter is used with target method which returns by reference.
        /// </summary>
        internal static string DontUseResultWithMethodsReturningByRefTitle {
            get {
                return ResourceManager.GetString("DontUseResultWithMethodsReturningByRefTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;__result&apos; parameter is used with target method &apos;{0}&apos; which returns &apos;void&apos;..
        /// </summary>
        internal static string DontUseResultWithMethodsReturningVoidMessageFormat {
            get {
                return ResourceManager.GetString("DontUseResultWithMethodsReturningVoidMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;__result&apos; parameter is used with target method which returns &apos;void&apos;.
        /// </summary>
        internal static string DontUseResultWithMethodsReturningVoidTitle {
            get {
                return ResourceManager.GetString("DontUseResultWithMethodsReturningVoidTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target method annotations have no effect on non-primary patch methods..
        /// </summary>
        internal static string DontUseTargetMethodAnnotationsOnNonPrimaryPatchMethodsMessageFormat {
            get {
                return ResourceManager.GetString("DontUseTargetMethodAnnotationsOnNonPrimaryPatchMethodsMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target method annotations have no effect on non-primary patch methods.
        /// </summary>
        internal static string DontUseTargetMethodAnnotationsOnNonPrimaryPatchMethodsTitle {
            get {
                return ResourceManager.GetString("DontUseTargetMethodAnnotationsOnNonPrimaryPatchMethodsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing HarmonyPatch attribute on type. Specified patches will not be discovered..
        /// </summary>
        internal static string HarmonyPatchAttributeMustBeOnTypeMessageFormat {
            get {
                return ResourceManager.GetString("HarmonyPatchAttributeMustBeOnTypeMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing HarmonyPatch attribute on type.
        /// </summary>
        internal static string HarmonyPatchAttributeMustBeOnTypeTitle {
            get {
                return ResourceManager.GetString("HarmonyPatchAttributeMustBeOnTypeTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A parameter for target type &apos;{0}&apos; instance must be present as the first parameter of the patch method &apos;{1}&apos;..
        /// </summary>
        internal static string InstanceParameterMustBePresentMessageFormat {
            get {
                return ResourceManager.GetString("InstanceParameterMustBePresentMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A parameter for target type instance must be present.
        /// </summary>
        internal static string InstanceParameterMustBePresentTitle {
            get {
                return ResourceManager.GetString("InstanceParameterMustBePresentTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A parameter for target type &apos;{0}&apos; instance must not be present as the first parameter of the patch method &apos;{1}&apos;..
        /// </summary>
        internal static string InstanceParameterMustNotBePresentMessageFormat {
            get {
                return ResourceManager.GetString("InstanceParameterMustNotBePresentMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A parameter for target type instance must not be present.
        /// </summary>
        internal static string InstanceParameterMustNotBePresentTitle {
            get {
                return ResourceManager.GetString("InstanceParameterMustNotBePresentTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple arguments target the same target method &apos;{0}&apos; parameter &apos;{1}&apos;..
        /// </summary>
        internal static string MultipleArgumentsMustNotTargetSameParameterMessageFormat {
            get {
                return ResourceManager.GetString("MultipleArgumentsMustNotTargetSameParameterMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple arguments target the same target method parameter.
        /// </summary>
        internal static string MultipleArgumentsMustNotTargetSameParameterTitle {
            get {
                return ResourceManager.GetString("MultipleArgumentsMustNotTargetSameParameterTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Patch method &apos;{0}&apos; parameter &apos;{1}&apos; must be passed by reference..
        /// </summary>
        internal static string ParameterMustBeByRefMessageFormat {
            get {
                return ResourceManager.GetString("ParameterMustBeByRefMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Patch method parameter must be passed by reference.
        /// </summary>
        internal static string ParameterMustBeByRefTitle {
            get {
                return ResourceManager.GetString("ParameterMustBeByRefTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Patch method &apos;{0}&apos; parameter &apos;{1}&apos; must not be passed by reference..
        /// </summary>
        internal static string ParameterMustNotBeByRefMessageFormat {
            get {
                return ResourceManager.GetString("ParameterMustNotBeByRefMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Patch method parameter must not be passed by reference.
        /// </summary>
        internal static string ParameterMustNotBeByRefTitle {
            get {
                return ResourceManager.GetString("ParameterMustNotBeByRefTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Patch method &apos;{0}&apos; parameter &apos;{1}&apos; type &apos;{2}&apos; is not annotated with HarmonyDelegate..
        /// </summary>
        internal static string PatchMethodDelegateParametersMustBeAnnotatedWithHarmonyDelegateMessageFormat {
            get {
                return ResourceManager.GetString("PatchMethodDelegateParametersMustBeAnnotatedWithHarmonyDelegateMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Patch method parameter type is not annotated with HarmonyDelegate.
        /// </summary>
        internal static string PatchMethodDelegateParametersMustBeAnnotatedWithHarmonyDelegateTitle {
            get {
                return ResourceManager.GetString("PatchMethodDelegateParametersMustBeAnnotatedWithHarmonyDelegateTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple method kinds are assigned to the patch method. Only one method kind will be recognized..
        /// </summary>
        internal static string PatchMethodMustHaveSingleKindMessageFormat {
            get {
                return ResourceManager.GetString("PatchMethodMustHaveSingleKindMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple method kinds are assigned to the patch method.
        /// </summary>
        internal static string PatchMethodMustHaveSingleKindTitle {
            get {
                return ResourceManager.GetString("PatchMethodMustHaveSingleKindTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Patch method &apos;{0}&apos; parameter &apos;{1}&apos; is not a recognized injection..
        /// </summary>
        internal static string PatchMethodParametersMustBeValidInjectionsMessageFormat {
            get {
                return ResourceManager.GetString("PatchMethodParametersMustBeValidInjectionsMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Patch method parameter is not a recognized injection.
        /// </summary>
        internal static string PatchMethodParametersMustBeValidInjectionsTitle {
            get {
                return ResourceManager.GetString("PatchMethodParametersMustBeValidInjectionsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect patch method &apos;{0}&apos; parameter &apos;{1}&apos; type. Valid types are: {2}..
        /// </summary>
        internal static string PatchMethodParameterTypesMustBeCorrectExactMessageFormat {
            get {
                return ResourceManager.GetString("PatchMethodParameterTypesMustBeCorrectExactMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect patch method parameter type.
        /// </summary>
        internal static string PatchMethodParameterTypesMustBeCorrectTitle {
            get {
                return ResourceManager.GetString("PatchMethodParameterTypesMustBeCorrectTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect patch method &apos;{0}&apos; parameter &apos;{1}&apos; type. Valid types are: {2} and their subtypes..
        /// </summary>
        internal static string PatchMethodParameterTypesMustBeCorrectWithSubtypesMessageFormat {
            get {
                return ResourceManager.GetString("PatchMethodParameterTypesMustBeCorrectWithSubtypesMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect patch method &apos;{0}&apos; parameter &apos;{1}&apos; type. Valid types are: {2} and their supertypes..
        /// </summary>
        internal static string PatchMethodParameterTypesMustBeCorrectWithSupertypesMessageFormat {
            get {
                return ResourceManager.GetString("PatchMethodParameterTypesMustBeCorrectWithSupertypesMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect patch method &apos;{0}&apos; return type. Valid types are: {1}..
        /// </summary>
        internal static string PatchMethodReturnTypesMustBeCorrectExactMessageFormat {
            get {
                return ResourceManager.GetString("PatchMethodReturnTypesMustBeCorrectExactMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect patch method return type.
        /// </summary>
        internal static string PatchMethodReturnTypesMustBeCorrectTitle {
            get {
                return ResourceManager.GetString("PatchMethodReturnTypesMustBeCorrectTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect patch method &apos;{0}&apos; return type. Valid types are: {1} and their subtypes..
        /// </summary>
        internal static string PatchMethodReturnTypesMustBeCorrectWithSubtypesMessageFormat {
            get {
                return ResourceManager.GetString("PatchMethodReturnTypesMustBeCorrectWithSubtypesMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect patch method &apos;{0}&apos; return type. Valid types are: {1} and their supertypes..
        /// </summary>
        internal static string PatchMethodReturnTypesMustBeCorrectWithSupertypesMessageFormat {
            get {
                return ResourceManager.GetString("PatchMethodReturnTypesMustBeCorrectWithSupertypesMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Patch method must be static..
        /// </summary>
        internal static string PatchMethodsMustBeStaticMessageFormat {
            get {
                return ResourceManager.GetString("PatchMethodsMustBeStaticMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Patch method must be static.
        /// </summary>
        internal static string PatchMethodsMustBeStaticTitle {
            get {
                return ResourceManager.GetString("PatchMethodsMustBeStaticTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Patch method is generic. Only non-generic methods are allowed..
        /// </summary>
        internal static string PatchMethodsMustNotBeGenericMessageFormat {
            get {
                return ResourceManager.GetString("PatchMethodsMustNotBeGenericMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Patch method is generic.
        /// </summary>
        internal static string PatchMethodsMustNotBeGenericTitle {
            get {
                return ResourceManager.GetString("PatchMethodsMustNotBeGenericTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Patch method &apos;{0}&apos; must not return by reference..
        /// </summary>
        internal static string PatchMethodsMustNotReturnByRefMessageFormat {
            get {
                return ResourceManager.GetString("PatchMethodsMustNotReturnByRefMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Patch method must not return by reference.
        /// </summary>
        internal static string PatchMethodsMustNotReturnByRefTitle {
            get {
                return ResourceManager.GetString("PatchMethodsMustNotReturnByRefTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Patch type is generic. Only non-generic types are allowed..
        /// </summary>
        internal static string PatchTypeMustNotBeGenericMessageFormat {
            get {
                return ResourceManager.GetString("PatchTypeMustNotBeGenericMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Patch type is generic.
        /// </summary>
        internal static string PatchTypeMustNotBeGenericTitle {
            get {
                return ResourceManager.GetString("PatchTypeMustNotBeGenericTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Patch method &apos;{0}&apos; parameter &apos;{1}&apos; does not correspond to a target method &apos;{2}&apos; parameter..
        /// </summary>
        internal static string ReversePatchMethodParameterMustCorrespondToTargetMethodParameterMessageFormat {
            get {
                return ResourceManager.GetString("ReversePatchMethodParameterMustCorrespondToTargetMethodParameterMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Patch method parameter does not correspond to a target method parameter.
        /// </summary>
        internal static string ReversePatchMethodParameterMustCorrespondToTargetMethodParameterTitle {
            get {
                return ResourceManager.GetString("ReversePatchMethodParameterMustCorrespondToTargetMethodParameterTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Patch method &apos;{0}&apos; parameter &apos;{1}&apos; does not have the same reference kind as the target method &apos;{2}&apos; parameter. Expected: {3}..
        /// </summary>
        internal static string ReversePatchMethodParameterMustHaveCorrectRefKindMessageFormat {
            get {
                return ResourceManager.GetString("ReversePatchMethodParameterMustHaveCorrectRefKindMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Patch method parameter does not have the same reference kind as the target method parameter.
        /// </summary>
        internal static string ReversePatchMethodParameterMustHaveCorrectRefKindTitle {
            get {
                return ResourceManager.GetString("ReversePatchMethodParameterMustHaveCorrectRefKindTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;__state&apos; parameter is never assigned by reference. It will always have the default value..
        /// </summary>
        internal static string StateShouldBeInitializedMessageFormat {
            get {
                return ResourceManager.GetString("StateShouldBeInitializedMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;__state&apos; parameter is never assigned.
        /// </summary>
        internal static string StateShouldBeInitializedTitle {
            get {
                return ResourceManager.GetString("StateShouldBeInitializedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;__state&apos; parameter type must not differ within same patch type..
        /// </summary>
        internal static string StateTypeMustNotDifferMessageFormat {
            get {
                return ResourceManager.GetString("StateTypeMustNotDifferMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;__state&apos; parameter type must not differ.
        /// </summary>
        internal static string StateTypeMustNotDifferTitle {
            get {
                return ResourceManager.GetString("StateTypeMustNotDifferTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not enough information to target a method..
        /// </summary>
        internal static string TargetMethodMustBeFullySpecifiedMessageFormat {
            get {
                return ResourceManager.GetString("TargetMethodMustBeFullySpecifiedMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not enough information to target a method.
        /// </summary>
        internal static string TargetMethodMustBeFullySpecifiedTitle {
            get {
                return ResourceManager.GetString("TargetMethodMustBeFullySpecifiedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target method &apos;{0}&apos; does not exist in type &apos;{1}&apos;..
        /// </summary>
        internal static string TargetMethodMustExistMessageFormat {
            get {
                return ResourceManager.GetString("TargetMethodMustExistMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target method does not exist.
        /// </summary>
        internal static string TargetMethodMustExistTitle {
            get {
                return ResourceManager.GetString("TargetMethodMustExistTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ambiguous match on target method &apos;{0}&apos; in type &apos;{1}&apos;: {2} candidates found..
        /// </summary>
        internal static string TargetMethodMustNotBeAmbiguousMessageFormat {
            get {
                return ResourceManager.GetString("TargetMethodMustNotBeAmbiguousMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ambiguous match on target method.
        /// </summary>
        internal static string TargetMethodMustNotBeAmbiguousTitle {
            get {
                return ResourceManager.GetString("TargetMethodMustNotBeAmbiguousTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target method &apos;{0}&apos; of type &apos;{1}&apos; is generic. Only non-generic methods are allowed when specifying target method via attributes..
        /// </summary>
        internal static string TargetMethodMustNotBeGenericMessageFormat {
            get {
                return ResourceManager.GetString("TargetMethodMustNotBeGenericMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target method is generic.
        /// </summary>
        internal static string TargetMethodMustNotBeGenericTitle {
            get {
                return ResourceManager.GetString("TargetMethodMustNotBeGenericTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Conflicting method specifications found..
        /// </summary>
        internal static string TargetMethodMustNotBeOverspecifiedMessageFormat {
            get {
                return ResourceManager.GetString("TargetMethodMustNotBeOverspecifiedMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Conflicting method specifications found.
        /// </summary>
        internal static string TargetMethodMustNotBeOverspecifiedTitle {
            get {
                return ResourceManager.GetString("TargetMethodMustNotBeOverspecifiedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target method &apos;{0}&apos; parameter with index {1} corresponding to patch method &apos;{2}&apos; parameter &apos;{3}&apos; does not exist..
        /// </summary>
        internal static string TargetMethodParameterWithSpecifiedIndexMustExistMessageFormat {
            get {
                return ResourceManager.GetString("TargetMethodParameterWithSpecifiedIndexMustExistMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target method parameter with specified index does not exist.
        /// </summary>
        internal static string TargetMethodParameterWithSpecifiedIndexMustExistTitle {
            get {
                return ResourceManager.GetString("TargetMethodParameterWithSpecifiedIndexMustExistTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target method &apos;{0}&apos; parameter with name &apos;{1}&apos; corresponding to patch method &apos;{2}&apos; parameter &apos;{3}&apos; does not exist..
        /// </summary>
        internal static string TargetMethodParameterWithSpecifiedNameMustExistMessageFormat {
            get {
                return ResourceManager.GetString("TargetMethodParameterWithSpecifiedNameMustExistMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target method parameter with specified name does not exist.
        /// </summary>
        internal static string TargetMethodParameterWithSpecifiedNameMustExistTitle {
            get {
                return ResourceManager.GetString("TargetMethodParameterWithSpecifiedNameMustExistTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target type &apos;{0}&apos; field with index {1} corresponding to patch method &apos;{2}&apos; parameter &apos;{3}&apos; does not exist..
        /// </summary>
        internal static string TargetTypeFieldWithSpecifiedIndexMustExistMessageFormat {
            get {
                return ResourceManager.GetString("TargetTypeFieldWithSpecifiedIndexMustExistMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target type field with specified index does not exist.
        /// </summary>
        internal static string TargetTypeFieldWithSpecifiedIndexMustExistTitle {
            get {
                return ResourceManager.GetString("TargetTypeFieldWithSpecifiedIndexMustExistTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target type &apos;{0}&apos; field with name &apos;{1}&apos; corresponding to patch method &apos;{2}&apos; parameter &apos;{3}&apos; does not exist..
        /// </summary>
        internal static string TargetTypeFieldWithSpecifiedNameMustExistMessageFormat {
            get {
                return ResourceManager.GetString("TargetTypeFieldWithSpecifiedNameMustExistMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target type field with specified name does not exist.
        /// </summary>
        internal static string TargetTypeFieldWithSpecifiedNameMustExistTitle {
            get {
                return ResourceManager.GetString("TargetTypeFieldWithSpecifiedNameMustExistTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target type &apos;{0}&apos; is not a named type. Arrays and pointers are not allowed..
        /// </summary>
        internal static string TargetTypeMustBeNamedTypeMessageFormat {
            get {
                return ResourceManager.GetString("TargetTypeMustBeNamedTypeMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target type is not a named type.
        /// </summary>
        internal static string TargetTypeMustBeNamedTypeTitle {
            get {
                return ResourceManager.GetString("TargetTypeMustBeNamedTypeTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target type &apos;{0}&apos; does not exist..
        /// </summary>
        internal static string TargetTypeMustExistMessageFormat {
            get {
                return ResourceManager.GetString("TargetTypeMustExistMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target type does not exist.
        /// </summary>
        internal static string TargetTypeMustExistTitle {
            get {
                return ResourceManager.GetString("TargetTypeMustExistTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target type &apos;{0}&apos; is an open generic type. Only non-generic and closed generic types are allowed..
        /// </summary>
        internal static string TargetTypeMustNotBeOpenGenericTypeMessageFormat {
            get {
                return ResourceManager.GetString("TargetTypeMustNotBeOpenGenericTypeMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target type is an open generic type.
        /// </summary>
        internal static string TargetTypeMustNotBeOpenGenericTypeTitle {
            get {
                return ResourceManager.GetString("TargetTypeMustNotBeOpenGenericTypeTitle", resourceCulture);
            }
        }
    }
}
